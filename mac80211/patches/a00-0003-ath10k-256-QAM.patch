--- a/drivers/net/wireless/ath/ath10k/mac.c
+++ b/drivers/net/wireless/ath/ath10k/mac.c
@@ -1601,8 +1601,13 @@ static void ath10k_peer_assoc_h_vht(stru
 
 	arg->peer_flags |= WMI_PEER_VHT;
 
-	if (ar->hw->conf.chandef.chan->band == IEEE80211_BAND_2GHZ)
+	if (ar->hw->conf.chandef.chan->band == IEEE80211_BAND_2GHZ) {
 		arg->peer_flags |= WMI_PEER_VHT_2G;
+		if (INTEROP_2G_256QAM_CAPBILITY) {
+			arg->peer_flags |= (WMI_PEER_DISABLE_AMSDU_REQ |
+					    WMI_PEER_DISABLE_AMSDU_RESP);
+		}
+	}
 
 	arg->peer_vht_caps = vht_cap->cap;
 
--- a/drivers/net/wireless/ath/ath10k/mac.h
+++ b/drivers/net/wireless/ath/ath10k/mac.h
@@ -28,6 +28,8 @@ struct ath10k_generic_iter {
 	int ret;
 };
 
+#define INTEROP_2G_256QAM_CAPBILITY   1
+
 struct ath10k *ath10k_mac_create(size_t priv_size);
 void ath10k_mac_destroy(struct ath10k *ar);
 int ath10k_mac_register(struct ath10k *ar);
--- a/drivers/net/wireless/ath/ath10k/wmi.h
+++ b/drivers/net/wireless/ath/ath10k/wmi.h
@@ -4504,6 +4504,7 @@ struct wmi_peer_set_q_empty_callback_cmd
 #define WMI_PEER_QOS            0x00000002
 #define WMI_PEER_NEED_PTK_4_WAY 0x00000004
 #define WMI_PEER_NEED_GTK_2_WAY 0x00000010
+#define WMI_PEER_DISABLE_AMSDU_REQ  0x00000400
 #define WMI_PEER_APSD           0x00000800
 #define WMI_PEER_HT             0x00001000
 #define WMI_PEER_40MHZ          0x00002000
@@ -4515,6 +4516,7 @@ struct wmi_peer_set_q_empty_callback_cmd
 #define WMI_PEER_VHT            0x02000000
 #define WMI_PEER_80MHZ          0x04000000
 #define WMI_PEER_VHT_2G         0x08000000
+#define WMI_PEER_DISABLE_AMSDU_RESP 0x20000000
 
 /*
  * Peer rate capabilities.
