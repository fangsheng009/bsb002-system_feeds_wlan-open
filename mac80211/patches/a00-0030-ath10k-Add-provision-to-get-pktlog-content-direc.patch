--- a/drivers/net/wireless/ath/ath10k/core.c
+++ b/drivers/net/wireless/ath/ath10k/core.c
@@ -139,6 +139,8 @@ static const struct ath10k_hw_params ath
 		.continuous_frag_desc = true,
 		.channel_counters_freq_hz = 150000,
 		.max_probe_resp_desc_thres = 24,
+		.pktlog_ce_found = true,
+		.pktlog_ce = 8,
 		.fw = {
 			.dir = QCA99X0_HW_2_0_FW_DIR,
 			.fw = QCA99X0_HW_2_0_FW_FILE,
--- a/drivers/net/wireless/ath/ath10k/core.h
+++ b/drivers/net/wireless/ath/ath10k/core.h
@@ -640,6 +640,12 @@ struct ath10k {
 		 */
 		u32 max_probe_resp_desc_thres;
 
+		/* Specifies dedicated copy engine number info (if any) used
+		 * for pktlog.
+		 */
+		u8 pktlog_ce;
+		bool pktlog_ce_found;
+
 		struct ath10k_hw_params_fw {
 			const char *dir;
 			const char *fw;
--- a/drivers/net/wireless/ath/ath10k/hif.h
+++ b/drivers/net/wireless/ath/ath10k/hif.h
@@ -83,6 +83,9 @@ struct ath10k_hif_ops {
 	void (*set_callbacks)(struct ath10k *ar,
 			      struct ath10k_hif_cb *callbacks);
 
+	void (*set_pktlog_callbacks)(struct ath10k *ar,
+				     struct ath10k_hif_cb *callbacks);
+
 	u16 (*get_free_queue_number)(struct ath10k *ar, u8 pipe_id);
 
 	u32 (*read32)(struct ath10k *ar, u32 address);
@@ -169,6 +172,12 @@ static inline void ath10k_hif_set_callba
 	ar->hif.ops->set_callbacks(ar, callbacks);
 }
 
+static inline void ath10k_hif_set_pktlog_callbacks(struct ath10k *ar,
+						   struct ath10k_hif_cb *cb)
+{
+	ar->hif.ops->set_pktlog_callbacks(ar, cb);
+}
+
 static inline u16 ath10k_hif_get_free_queue_number(struct ath10k *ar,
 						   u8 pipe_id)
 {
--- a/drivers/net/wireless/ath/ath10k/pci.c
+++ b/drivers/net/wireless/ath/ath10k/pci.c
@@ -1144,6 +1144,11 @@ static void ath10k_pci_ce_recv_data(stru
 	unsigned int transfer_id;
 	unsigned int flags;
 
+	if (ar->hw_params.pktlog_ce_found &&
+	    ar->hw_params.pktlog_ce == ce_state->id &&
+	    ar_pci->pktlog_msg_callback.rx_completion)
+		cb = &ar_pci->pktlog_msg_callback;
+
 	__skb_queue_head_init(&list);
 	while (ath10k_ce_completed_recv_next(ce_state, &transfer_context,
 					     &ce_data, &nbytes, &transfer_id,
@@ -1356,6 +1361,17 @@ static void ath10k_pci_hif_set_callbacks
 	       sizeof(ar_pci->msg_callbacks_current));
 }
 
+static void ath10k_pci_hif_set_pktlog_callbacks(struct ath10k *ar,
+						struct ath10k_hif_cb *callbacks)
+{
+	struct ath10k_pci *ar_pci = ath10k_pci_priv(ar);
+
+	ath10k_dbg(ar, ATH10K_DBG_PCI, "pci hif set pktlog callbacks\n");
+
+	memcpy(&ar_pci->pktlog_msg_callback, callbacks,
+	       sizeof(ar_pci->pktlog_msg_callback));
+}
+
 static void ath10k_pci_kill_tasklet(struct ath10k *ar)
 {
 	struct ath10k_pci *ar_pci = ath10k_pci_priv(ar);
@@ -2424,6 +2440,7 @@ static const struct ath10k_hif_ops ath10
 	.get_default_pipe	= ath10k_pci_hif_get_default_pipe,
 	.send_complete_check	= ath10k_pci_hif_send_complete_check,
 	.set_callbacks		= ath10k_pci_hif_set_callbacks,
+	.set_pktlog_callbacks	= ath10k_pci_hif_set_pktlog_callbacks,
 	.get_free_queue_number	= ath10k_pci_hif_get_free_queue_number,
 	.power_up		= ath10k_pci_hif_power_up,
 	.power_down		= ath10k_pci_hif_power_down,
--- a/drivers/net/wireless/ath/ath10k/pci.h
+++ b/drivers/net/wireless/ath/ath10k/pci.h
@@ -176,6 +176,7 @@ struct ath10k_pci {
 	struct ath10k_pci_pipe pipe_info[CE_COUNT_MAX];
 
 	struct ath10k_hif_cb msg_callbacks_current;
+	struct ath10k_hif_cb pktlog_msg_callback;
 
 	/* Copy Engine used for Diagnostic Accesses */
 	struct ath10k_ce_pipe *ce_diag;
