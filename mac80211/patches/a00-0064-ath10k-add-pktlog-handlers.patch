diff --git a/drivers/net/wireless/ath/ath10k/pci.c b/drivers/net/wireless/ath/ath10k/pci.c
index 48137f4..b40f3ee 100644
--- a/drivers/net/wireless/ath/ath10k/pci.c
+++ b/drivers/net/wireless/ath/ath10k/pci.c
@@ -32,6 +32,7 @@
 
 #include "ce.h"
 #include "pci.h"
+#include "pktlog.h"
 
 enum ath10k_pci_irq_mode {
 	ATH10K_PCI_IRQ_AUTO = 0,
@@ -107,6 +108,7 @@ static void ath10k_pci_htc_tx_cb(struct ath10k_ce_pipe *ce_state);
 static void ath10k_pci_htc_rx_cb(struct ath10k_ce_pipe *ce_state);
 static void ath10k_pci_htt_tx_cb(struct ath10k_ce_pipe *ce_state);
 static void ath10k_pci_htt_rx_cb(struct ath10k_ce_pipe *ce_state);
+static void ath10k_pci_pktlog_rx_cb(struct ath10k_ce_pipe *ce_state);
 
 static const struct ce_attr host_ce_config_wlan[] = {
 	/* CE0: host->target HTC control and raw streams */
@@ -185,6 +187,7 @@ static const struct ce_attr host_ce_config_wlan[] = {
 		.src_nentries = 0,
 		.src_sz_max = 2048,
 		.dest_nentries = 128,
+		.recv_cb = ath10k_pci_pktlog_rx_cb,
 	},
 
 	/* CE9 target autonomous qcache memcpy */
@@ -1234,6 +1237,12 @@ static void ath10k_pci_htc_rx_cb(struct ath10k_ce_pipe *ce_state)
 	ath10k_pci_process_rx_cb(ce_state, ath10k_htc_rx_completion_handler);
 }
 
+/* Called by lower (CE) layer when data is received from the Target. */
+static void ath10k_pci_pktlog_rx_cb(struct ath10k_ce_pipe *ce_state)
+{
+	ath10k_pci_process_rx_cb(ce_state, ath10k_pktlog_rx_completion_handler);
+}
+
 /* Called by lower (CE) layer when a send to HTT Target completes. */
 static void ath10k_pci_htt_tx_cb(struct ath10k_ce_pipe *ce_state)
 {
diff --git a/drivers/net/wireless/ath/ath10k/pktlog.c b/drivers/net/wireless/ath/ath10k/pktlog.c
index f8286f2..616a3d0 100644
--- a/drivers/net/wireless/ath/ath10k/pktlog.c
+++ b/drivers/net/wireless/ath/ath10k/pktlog.c
@@ -504,8 +504,8 @@ static void ath_pktlog_frame_header(void *data)
 	}
 }
 
-static int ath10k_pktlog_rx_completion_handler(struct ath10k *ar,
-					    struct sk_buff *skb)
+void ath10k_pktlog_rx_completion_handler(struct ath10k *ar,
+					 struct sk_buff *skb)
 {
 	struct ath10k_pktlog_10_4_hdr *hdr =
 			(struct ath10k_pktlog_10_4_hdr *)skb->data;
@@ -515,9 +515,8 @@ static int ath10k_pktlog_rx_completion_handler(struct ath10k *ar,
 
 	ath10k_process_pktlog(ar, skb->data);
 	dev_kfree_skb_any(skb);
-
-	return 0;
 }
+EXPORT_SYMBOL(ath10k_pktlog_rx_completion_handler);
 
 static int ath_pktlog_10_4_op_pull_hdr(struct ath_pktlog_hdr_arg *arg,
 				       u8 *data)
diff --git a/drivers/net/wireless/ath/ath10k/pktlog.h b/drivers/net/wireless/ath/ath10k/pktlog.h
index 83a7d67..22c543c 100644
--- a/drivers/net/wireless/ath/ath10k/pktlog.h
+++ b/drivers/net/wireless/ath/ath10k/pktlog.h
@@ -220,7 +220,8 @@ void ath10k_init_pktlog(struct ath10k *ar);
 void ath10k_deinit_pktlog(struct ath10k *ar);
 void ath10k_process_pktlog(struct ath10k *ar, u8 *data);
 void ath10k_pktlog_rx(struct ath10k *ar, struct sk_buff_head *amsdu);
-
+void ath10k_pktlog_rx_completion_handler(struct ath10k *ar,
+					 struct sk_buff *skb);
 #else /* CPTCFG_ATH10K_PKTLOG */
 static inline void ath10k_init_pktlog(struct ath10k *ar)
 {
@@ -237,6 +238,11 @@ static inline void ath10k_process_pktlog(struct ath10k *ar, u8 *data)
 static inline void ath10k_pktlog_rx(struct ath10k *ar, struct sk_buff_head *amsdu)
 {
 }
+
+static inline void ath10k_pktlog_rx_completion_handler(struct ath10k *ar,
+						       struct sk_buff *skb)
+{
+}
 #endif /* CPTCFG_ATH10K_PKTLOG */
 
 #endif /* _PKTLOG_H_ */
