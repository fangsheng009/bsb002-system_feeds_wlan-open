--- a/drivers/net/wireless/ath/ath10k/wmi.c
+++ b/drivers/net/wireless/ath/ath10k/wmi.c
@@ -5142,7 +5142,7 @@ static struct sk_buff *ath10k_wmi_10_2_o
 	cmd = (struct wmi_init_cmd_10_2 *)buf->data;
 
 	features = WMI_10_2_RX_BATCH_MODE;
-	if (test_bit(WMI_SERVICE_COEX_GPIO, ar->wmi.svc_map))
+	if (test_bit(WMI_SERVICE_COEX_GPIO, ar->wmi.svc_map) && ath10k_bt_coex)
 		features |= WMI_10_2_COEX_GPIO;
 	cmd->resource_config.feature_mask = __cpu_to_le32(features);
 
--- a/drivers/net/wireless/ath/ath10k/core.c
+++ b/drivers/net/wireless/ath/ath10k/core.c
@@ -38,6 +38,7 @@ static bool skip_otp;
 static bool no_calfile = 1;
 bool bug_on_fw_assert = true;
 bool ath10k_enable_smart_antenna = false;
+bool ath10k_bt_coex = false;
 
 module_param_named(debug_mask, ath10k_debug_mask, uint, 0644);
 module_param_named(cryptmode, ath10k_cryptmode_param, uint, 0644);
@@ -47,6 +48,7 @@ module_param(no_calfile, bool, 0644);
 module_param(bug_on_fw_assert, bool, 0644);
 module_param_named(enable_smart_antenna, ath10k_enable_smart_antenna,
 		   bool, 0644);
+module_param_named(bt_coex, ath10k_bt_coex, bool, 0444);
 
 MODULE_PARM_DESC(debug_mask, "Debugging mask");
 MODULE_PARM_DESC(uart_print, "Uart target debugging");
@@ -55,6 +57,7 @@ MODULE_PARM_DESC(cryptmode, "Crypto mode
 MODULE_PARM_DESC(no_calfile, "Do not try to download calibration files");
 MODULE_PARM_DESC(bug_on_fw_assert, "Bug on firmware assert");
 MODULE_PARM_DESC(enable_smart_antenna, "Enable smart antenna supprot in fw");
+MODULE_PARM_DESC(bt_coex, "The BT-coex feature with external BT modules");
 
 static const struct ath10k_hw_params ath10k_hw_params_list[] = {
 	{
--- a/drivers/net/wireless/ath/ath10k/core.h
+++ b/drivers/net/wireless/ath/ath10k/core.h
@@ -841,6 +841,8 @@ static inline bool ath10k_smart_ant_enab
 	return true;
 }
 
+extern bool ath10k_bt_coex;
+
 struct ath10k *ath10k_core_create(size_t priv_size, struct device *dev,
 				  enum ath10k_bus bus,
 				  enum ath10k_hw_rev hw_rev,
