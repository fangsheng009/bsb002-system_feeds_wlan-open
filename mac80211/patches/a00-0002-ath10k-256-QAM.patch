--- a/drivers/net/wireless/ath/ath10k/mac.c
+++ b/drivers/net/wireless/ath/ath10k/mac.c
@@ -2321,8 +2321,13 @@ static void ath10k_peer_assoc_h_vht(stru
 
 	arg->peer_flags |= WMI_PEER_VHT;
 
-	if (def.chan->band == IEEE80211_BAND_2GHZ)
+	if (def.chan->band == IEEE80211_BAND_2GHZ) {
 		arg->peer_flags |= WMI_PEER_VHT_2G;
+		if (INTEROP_2G_256QAM_CAPBILITY) {
+			arg->peer_flags |= (WMI_PEER_DISABLE_AMSDU_REQ |
+					    WMI_PEER_DISABLE_AMSDU_RESP);
+		}
+	}
 
 	arg->peer_vht_caps = vht_cap->cap;
 
--- a/drivers/net/wireless/ath/ath10k/mac.h
+++ b/drivers/net/wireless/ath/ath10k/mac.h
@@ -39,6 +39,8 @@ struct rfc1042_hdr {
 	__be16 snap_type;
 } __packed;
 
+#define INTEROP_2G_256QAM_CAPBILITY   1
+
 struct ath10k *ath10k_mac_create(size_t priv_size);
 void ath10k_mac_destroy(struct ath10k *ar);
 int ath10k_mac_register(struct ath10k *ar);
--- a/drivers/net/wireless/ath/ath10k/wmi.h
+++ b/drivers/net/wireless/ath/ath10k/wmi.h
@@ -5475,6 +5475,7 @@ struct wmi_peer_set_q_empty_callback_cmd
 #define WMI_PEER_QOS            0x00000002
 #define WMI_PEER_NEED_PTK_4_WAY 0x00000004
 #define WMI_PEER_NEED_GTK_2_WAY 0x00000010
+#define WMI_PEER_DISABLE_AMSDU_REQ  0x00000400
 #define WMI_PEER_APSD           0x00000800
 #define WMI_PEER_HT             0x00001000
 #define WMI_PEER_40MHZ          0x00002000
@@ -5486,6 +5487,7 @@ struct wmi_peer_set_q_empty_callback_cmd
 #define WMI_PEER_VHT            0x02000000
 #define WMI_PEER_80MHZ          0x04000000
 #define WMI_PEER_VHT_2G         0x08000000
+#define WMI_PEER_DISABLE_AMSDU_RESP ar->wmi.peer_dis_amsdu_resp
 
 /*
  * Peer rate capabilities.
--- a/drivers/net/wireless/ath/ath10k/wmi.c
+++ b/drivers/net/wireless/ath/ath10k/wmi.c
@@ -6678,30 +6678,35 @@ int ath10k_wmi_attach(struct ath10k *ar)
 		ar->wmi.cmd = &wmi_10_4_cmd_map;
 		ar->wmi.vdev_param = &wmi_10_4_vdev_param_map;
 		ar->wmi.pdev_param = &wmi_10_4_pdev_param_map;
+		ar->wmi.peer_dis_amsdu_resp = 0x40000000;
 		break;
 	case ATH10K_FW_WMI_OP_VERSION_10_2_4:
 		ar->wmi.cmd = &wmi_10_2_4_cmd_map;
 		ar->wmi.ops = &wmi_10_2_4_ops;
 		ar->wmi.vdev_param = &wmi_10_2_4_vdev_param_map;
 		ar->wmi.pdev_param = &wmi_10_2_4_pdev_param_map;
+		ar->wmi.peer_dis_amsdu_resp = 0x20000000;
 		break;
 	case ATH10K_FW_WMI_OP_VERSION_10_2:
 		ar->wmi.cmd = &wmi_10_2_cmd_map;
 		ar->wmi.ops = &wmi_10_2_ops;
 		ar->wmi.vdev_param = &wmi_10x_vdev_param_map;
 		ar->wmi.pdev_param = &wmi_10x_pdev_param_map;
+		ar->wmi.peer_dis_amsdu_resp = 0x20000000;
 		break;
 	case ATH10K_FW_WMI_OP_VERSION_10_1:
 		ar->wmi.cmd = &wmi_10x_cmd_map;
 		ar->wmi.ops = &wmi_10_1_ops;
 		ar->wmi.vdev_param = &wmi_10x_vdev_param_map;
 		ar->wmi.pdev_param = &wmi_10x_pdev_param_map;
+		ar->wmi.peer_dis_amsdu_resp = 0x20000000;
 		break;
 	case ATH10K_FW_WMI_OP_VERSION_MAIN:
 		ar->wmi.cmd = &wmi_cmd_map;
 		ar->wmi.ops = &wmi_ops;
 		ar->wmi.vdev_param = &wmi_vdev_param_map;
 		ar->wmi.pdev_param = &wmi_pdev_param_map;
+		ar->wmi.peer_dis_amsdu_resp = 0x20000000;
 		break;
 	case ATH10K_FW_WMI_OP_VERSION_TLV:
 		ath10k_wmi_tlv_attach(ar);
--- a/drivers/net/wireless/ath/ath10k/core.h
+++ b/drivers/net/wireless/ath/ath10k/core.h
@@ -151,6 +151,7 @@ struct ath10k_wmi {
 	struct wmi_vdev_param_map *vdev_param;
 	struct wmi_pdev_param_map *pdev_param;
 	const struct wmi_ops *ops;
+	unsigned long peer_dis_amsdu_resp;
 
 	u32 num_mem_chunks;
 	u32 rx_decap_mode;
--- a/drivers/net/wireless/ath/ath10k/wmi-tlv.c
+++ b/drivers/net/wireless/ath/ath10k/wmi-tlv.c
@@ -3479,5 +3479,6 @@ void ath10k_wmi_tlv_attach(struct ath10k
 	ar->wmi.cmd = &wmi_tlv_cmd_map;
 	ar->wmi.vdev_param = &wmi_tlv_vdev_param_map;
 	ar->wmi.pdev_param = &wmi_tlv_pdev_param_map;
+	ar->wmi.peer_dis_amsdu_resp = 0x20000000;
 	ar->wmi.ops = &wmi_tlv_ops;
 }
